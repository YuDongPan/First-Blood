<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   
  
<mapper namespace="com.pyd.dao.AccountMapper"> 
	   
    <!-- 修改支付密码 -->  
    <update id="modifyPayPassword" parameterType="com.pyd.entity.Account">  
        update account set new_pay_password= #{new_pay_password} where isDelete=0 and card= #{card}
    </update>
    
    <!-- 存款 -->  
    <update id="saveMoney" parameterType="com.pyd.entity.Account">  
        update account set money=money + #{money} where isDelete=0 and card= #{card}
    </update>
    
    <!-- 取款 -->  
    <update id="takeMoney" parameterType="com.pyd.entity.Account">  
        update account set money=money - #{money} where isDelete=0 and card= #{card}
    </update>
    
    <!--开户-->
    <insert id="openAccount" parameterType="com.pyd.entity.Account">
    	insert into account(card,username,sex, money, open_date, old_pay_password, new_pay_password, isDelete, email) 
    	values(#{card},#{username},#{sex},#{money},#{open_date},#{old_pay_password},#{new_pay_password},#{isDelete},#{email})
    </insert>
    
    <!-- 查询账户余额 -->  
    <select id="queryMoney" resultType="int" parameterType="java.lang.String">  
        select money from account where isDelete=0 and card=#{card}
    </select>
    
    <!-- 查询银行卡归属的账户 -->  
    <select id="queryAccount" resultType="com.pyd.entity.Account" parameterType="java.lang.String">  
        select * from account where isDelete=0 and card=#{card}
    </select>
    
    <!-- 查询密码是否正确 -->  
    <select id="queryPassword" resultType="com.pyd.entity.Account" parameterType="com.pyd.entity.Account">  
        select * from account where isDelete=0 and card=#{card} and password=#{password}
    </select>  
    
    <!-- 查询账户总数 -->
    <select id="queryTotalAccountNumber" resultType="int">
    	select count(1) from account where isDelete=0
    </select>
   
    <!-- 查询总记录(分页查询) -->
    <select id="queryAccountByPage" resultType="com.pyd.entity.Account" parameterType="com.pyd.entity.Pagination">
    	select * from account where isDelete=0 order by id limit #{page},#{count}
    </select>
    
    <!-- 删除账户 -->
    <update id="deleteAccount" parameterType="com.pyd.entity.Account">
    	update account set isDelete=1 where isDelete=0 and card=#{card} and old_pay_password=#{old_pay_password} and new_pay_password=#{new_pay_password}
    </update>
    
     <!-- 查询单个账户 -->
    <select id="queryOneAccount" parameterType="com.pyd.entity.Account" resultType="com.pyd.entity.Account">
    	select * from account where isDelete=0 and card=#{card}
    </select>
    
     <!-- 根据用户登录名查询账户的所有信息-->
     <select id="queryAccountByName" parameterType="java.lang.String" resultType="com.pyd.entity.Account">
         select id,card,account.username,sex,money,open_date,old_pay_password,new_pay_password,isDelete,account.email
          from account,user where account.username = user.username and user.username = #{username} and isDelete = 0
     </select>
     
     <!-- 通过卡号查询账户是否存在 -->
    <select id="queryAccountExistByCard" parameterType="java.lang.String" resultType="com.pyd.entity.Account">
    	select * from account where isDelete = 0 and card=#{card}
    </select>
    
    <!-- 通过用户名查询账户是否存在 -->
    <select id="queryAccountExistByName" parameterType="java.lang.String" resultType="com.pyd.entity.Account">
    	select * from account where isDelete = 0 and username=#{username}
    </select>
    
    <!-- 通过用户名查询账户是否存在 -->
    <select id="queryAllAccount" resultType="com.pyd.entity.Account">
    	select * from account order by id
    </select>
    
    <!-- 根据条件模糊查询账户记录 -->
    <select id="queryAccountByCondition" parameterType="java.lang.String" resultType="com.pyd.entity.Account">
	select * from account
	<where>
	    <!-- 只有一个参数作判断的时候一定要用_parameter来代替 -->
		<if test="_parameter != null">
			card like #{condition}
			or username like #{condition}
			or sex like #{condition}
			or money like #{condition}
			or open_date like #{condition}
			or email like #{condition}
		</if>
	</where>
	 order by id asc
</select>

<!-- 根据条件模糊查询储蓄记录总条数 -->
    <select id="queryAccountRecordCnt" parameterType="com.pyd.entity.SearchCondition" resultType="int">
	select count(*) from account
	<where>
		<if test="condition != null">
			card like #{condition}
			or username like #{condition}
			or sex like #{condition}
			or money like #{condition}
			or open_date like #{condition}
			or email like #{condition}
		</if>
	</where>
</select>
    

</mapper>  
